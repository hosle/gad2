package com.game.operator;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.protocol.HTTP;
import org.apache.http.util.EntityUtils;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.content.Context;
import android.content.DialogInterface;
import android.os.Handler;
import android.os.Message;
import android.text.TextUtils;
import android.widget.Toast;
import cn.bmob.im.BmobUserManager;
import cn.bmob.v3.datatype.BmobRelation;
import cn.bmob.v3.listener.SaveListener;
import cn.bmob.v3.listener.UpdateListener;

import com.game.jifen.GameJifen;
import com.userim.User;

/**
 * @author HenryTam
 *
 */
public class AdJifenManager {

	protected static final String Activity = null;
	private BmobUserManager userManager ;
	private User mUser;
	private GameJifen mJifen;
	
	
	//private Handler mHandler_postrecord;
	
	private Context mContext;
	private static AdJifenManager instance;
	
	//banner申请成功的时间
	private String applyTime_adBanner;
	private String adName;
	
	
	private Handler mHandler_postrecord=new Handler(){
		
		@Override
		public void handleMessage(Message msg) {
			// TODO Auto-generated method stub
			if (msg.what==200) {
				String resultString=msg.obj.toString();
				//toast(resultString);
				//this.removeCallbacks(mThread_postrecord);
				
			}
			
			
		}
	};
	
	public AdJifenManager(Context context) {
		super();
		mContext=context;
		userManager=BmobUserManager.getInstance(context);
		mUser =  userManager.getCurrentUser(User.class);
		// TODO Auto-generated constructor stub
		
		
	}
	
	public static synchronized AdJifenManager getInstance(Context vContext) {
		if (instance==null) {
			instance=new AdJifenManager(vContext);
		}
		
		return instance;
		
	}

	
	
//上传一次游戏积分
    
    /**
     * @param vJifen 本次游戏的积分
     */
    public void saveGameJifen(int vJifen) {
    	
    	
    	 mJifen=new GameJifen();
    	 mJifen.setPlayer(mUser);
    	 mJifen.setJifen(vJifen);
    	 mJifen.setGameId("0303003");
    	 mJifen.setExRate((float)0.38);
    	 
    	 mJifen.save(mContext, new SaveListener() {
			
			@Override
			public void onSuccess() {
				// TODO Auto-generated method stub
				toast("你成功获得一次积分");
				addGameJifenToUser();
			}
			
			@Override
			public void onFailure(int arg0, String arg1) {
				// TODO Auto-generated method stub
				toast("fail");
			}
		});
    	  
    	  
	}
    
    /**
	 * 添加积分到用户的积分信息中
	 */
	private void addGameJifenToUser(){
		if(TextUtils.isEmpty(mUser.getObjectId()) || 
				TextUtils.isEmpty(mJifen.getObjectId())){
			toast("当前用户或者当前Card对象的object为空");
			return;
		}
		
		BmobRelation jifens = new BmobRelation();
		jifens.add(mJifen);
		mUser.setGameJifen(jifens);
		mUser.update(mContext, new UpdateListener() {
			
			@Override
			public void onSuccess() {
				// TODO Auto-generated method stub
				toast("已成功添加到用户的积分信息中");
			}
			
			@Override
			public void onFailure(int arg0, String arg1) {
				// TODO Auto-generated method stub
				toast("很遗憾，用户的积分信息添加失败");
			}
		});
	}
	
	 public void showDialogQuit(){
	    	Builder mDialog= new AlertDialog.Builder(mContext);
	    	//final int score=Config.time;
	    	mDialog.setTitle("退出");
	    	mDialog.setMessage("确定退出吗？");
	    	mDialog.setPositiveButton("确定", new DialogInterface.OnClickListener() {
				
				@Override
				public void onClick(DialogInterface arg0, int arg1) {
					// TODO Auto-generated method stub
					
					//jifenManager.saveGameJifen(score);//上传积分
					if(adName!=null){
						postDataToBackend("http://219.223.240.65:3000/addRecord");
						
					}
					//((Activity)mContext).finish();
					
				}
				
			});
	    	
	    	mDialog.setNegativeButton("取消", new DialogInterface.OnClickListener() {
				
				@Override
				public void onClick(DialogInterface arg0, int arg1) {
					// TODO Auto-generated method stub
					arg0.cancel();
					((Activity)mContext).finish();
				}
			});
	    	
	    	mDialog.show();
	    }
	 
	


	public void setApplyTime_adBanner(String applyTime_adBanner) {
		this.applyTime_adBanner = applyTime_adBanner;
	}
	

	public void setAdName(String adName) {
		this.adName = adName;
	}

	/**
	 * 自定义一个Toast方法
	 * 
	 * @param msg
	 *            要输出的提示信息
	 */
	private void toast(String msg) {
		Toast.makeText(mContext, msg, Toast.LENGTH_SHORT).show();
	}

	
	
}
